// Generated by view binder compiler. Do not edit!
package com.example.partyplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.partyplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySingleItemBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final TextView linkTextView;

  @NonNull
  public final TextView pubDateTextView;

  @NonNull
  public final TextView titleTextView;

  private ActivitySingleItemBinding(@NonNull ScrollView rootView,
      @NonNull TextView descriptionTextView, @NonNull TextView linkTextView,
      @NonNull TextView pubDateTextView, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.descriptionTextView = descriptionTextView;
    this.linkTextView = linkTextView;
    this.pubDateTextView = pubDateTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySingleItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySingleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_single_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySingleItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.linkTextView;
      TextView linkTextView = ViewBindings.findChildViewById(rootView, id);
      if (linkTextView == null) {
        break missingId;
      }

      id = R.id.pubDateTextView;
      TextView pubDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (pubDateTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivitySingleItemBinding((ScrollView) rootView, descriptionTextView, linkTextView,
          pubDateTextView, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
