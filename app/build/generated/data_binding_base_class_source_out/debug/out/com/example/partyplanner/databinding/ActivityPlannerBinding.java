// Generated by view binder compiler. Do not edit!
package com.example.partyplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.partyplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPlannerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout PlannerActivity;

  @NonNull
  public final TextView budget;

  @NonNull
  public final Button buttonNext;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final TextView date;

  @NonNull
  public final EditText editTextBudget;

  @NonNull
  public final EditText editTextDate;

  @NonNull
  public final EditText editTextGuestNo;

  @NonNull
  public final EditText editTextTheme;

  @NonNull
  public final EditText editTextTime;

  @NonNull
  public final TextView guest;

  @NonNull
  public final TextView theme;

  @NonNull
  public final TextView time2;

  private ActivityPlannerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout PlannerActivity, @NonNull TextView budget,
      @NonNull Button buttonNext, @NonNull Button buttonSave, @NonNull TextView date,
      @NonNull EditText editTextBudget, @NonNull EditText editTextDate,
      @NonNull EditText editTextGuestNo, @NonNull EditText editTextTheme,
      @NonNull EditText editTextTime, @NonNull TextView guest, @NonNull TextView theme,
      @NonNull TextView time2) {
    this.rootView = rootView;
    this.PlannerActivity = PlannerActivity;
    this.budget = budget;
    this.buttonNext = buttonNext;
    this.buttonSave = buttonSave;
    this.date = date;
    this.editTextBudget = editTextBudget;
    this.editTextDate = editTextDate;
    this.editTextGuestNo = editTextGuestNo;
    this.editTextTheme = editTextTheme;
    this.editTextTime = editTextTime;
    this.guest = guest;
    this.theme = theme;
    this.time2 = time2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_planner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout PlannerActivity = (ConstraintLayout) rootView;

      id = R.id.budget;
      TextView budget = ViewBindings.findChildViewById(rootView, id);
      if (budget == null) {
        break missingId;
      }

      id = R.id.buttonNext;
      Button buttonNext = ViewBindings.findChildViewById(rootView, id);
      if (buttonNext == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.editTextBudget;
      EditText editTextBudget = ViewBindings.findChildViewById(rootView, id);
      if (editTextBudget == null) {
        break missingId;
      }

      id = R.id.editTextDate;
      EditText editTextDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextDate == null) {
        break missingId;
      }

      id = R.id.editTextGuestNo;
      EditText editTextGuestNo = ViewBindings.findChildViewById(rootView, id);
      if (editTextGuestNo == null) {
        break missingId;
      }

      id = R.id.editTextTheme;
      EditText editTextTheme = ViewBindings.findChildViewById(rootView, id);
      if (editTextTheme == null) {
        break missingId;
      }

      id = R.id.editTextTime;
      EditText editTextTime = ViewBindings.findChildViewById(rootView, id);
      if (editTextTime == null) {
        break missingId;
      }

      id = R.id.guest;
      TextView guest = ViewBindings.findChildViewById(rootView, id);
      if (guest == null) {
        break missingId;
      }

      id = R.id.theme;
      TextView theme = ViewBindings.findChildViewById(rootView, id);
      if (theme == null) {
        break missingId;
      }

      id = R.id.time2;
      TextView time2 = ViewBindings.findChildViewById(rootView, id);
      if (time2 == null) {
        break missingId;
      }

      return new ActivityPlannerBinding((ConstraintLayout) rootView, PlannerActivity, budget,
          buttonNext, buttonSave, date, editTextBudget, editTextDate, editTextGuestNo,
          editTextTheme, editTextTime, guest, theme, time2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
